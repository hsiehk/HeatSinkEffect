import numpy as np
import matplotlib.pyplot as plt
from scipy.optimize import curve_fit as cf

h=13.23

time_data = [0.0,0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0,6.0,7.0,8.0,9.0,10.0,11.0,12.0,13.0,14.0,15.0,16.0,17.0,18.0,19.0,20.0,22.0,24.0,26.0,28.0,30.0,35.0]
temp_data = [27.4,31.3,35.2,38.6,42.2,45.7,49.0,52.2,56.4,58.4,61.2,64.0,71.8,76.6,80.9,85.0,88.7,92.4,95.7,98.9,101.7,104.4,106.5,109.0,111.3,113.2,114.9,116.6,122.4,124.5,126.5,130.0]

time_data = np.array(time_data);
time_data = np.multiply(time_data, 60.0);


plt.xlabel("t (s)")
plt.ylabel("T(t) (\xb0C)")


def temp_func(t, h):
  dens = 2700
  c_p = 901
  A_s = 0.04*0.04*2 + 4*0.01*0.04
  vol = 0.04*0.04*0.01
  power = float(6.857)
  T_amb = 22.0
  return (1-np.exp(t*(-h*A_s/(dens*vol*c_p))))*(power/(h*A_s)) + T_amb

popt, pcov = cf(temp_func, time_data, temp_data);

plt.plot(time_data, temp_func(time_data, h), 'r--',linewidth=4, label= "Best Fitted h Line: h=%5.3f" %h)
plt.plot(time_data, temp_func(time_data, *popt), 'k-',  label="Fitted: h=%5.3f" %tuple(popt))
plt.scatter(time_data, temp_data, label='Experimental Data: h=13.227')
plt.legend(fontsize= 12)
plt.show();
